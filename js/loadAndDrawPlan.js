function drawResult(id, latency, totalTime, result) {
  var canvas = document.getElementById(id);
  var ctx = canvas.getContext("2d");
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.font = "18px serif";

  if (latency === 0) {
    ctx.fillText("Query lateny: ", 10, 30);
    ctx.fillText("Total time: ", 10, 50);
  } else {
    ctx.fillText("Query lateny: " + latency + "s", 10, 30);
    ctx.fillText("Total time: " + totalTime + "s", 10, 50);
  }
  ctx.beginPath();
  ctx.moveTo(10, 65);
  ctx.lineTo(140, 65);
  ctx.stroke();
  ctx.fillText("Avg_yearly", 30, 85);
  ctx.beginPath();
  ctx.moveTo(10, 95);
  ctx.lineTo(140, 95);
  ctx.stroke();
  if (latency === 0) {
    ctx.fillText("", 25, 115);
  } else {
    ctx.fillText(result, 25, 115);
  }
  ctx.beginPath();
  ctx.moveTo(10, 130);
  ctx.lineTo(140, 130);
  ctx.stroke();
}

let inqpTotalTime = "131";
let sparkTotalTime = "233";
let inqpLatency = "7.5";
let sparkLatency = "6.4";
let inqpResult = "3295493.51";
let sparkResult = "3295493.51";

function drawQueryPlan() {
  var queryName = document.getElementById("query").value;
  if (queryName.localeCompare("Q-HighCustBal") === 0) {
    loadAndDrawImage("assets/queryinfo/qhigh/queryplan.png", "queryPlan", 1.0);
  } else if (queryName.localeCompare("Q-17") === 0) {
    loadAndDrawImage("assets/queryinfo/q17/queryplan.png", "queryPlan", 1.67);
  }
}

function drawRuntimePlan() {
  loadAndDrawPlanWithPace("assets/queryinfo/q17/q17_inqp.png", "q17plan_inqp");
  loadAndDrawPlanWithPace(
    "assets/queryinfo/q17/q17_spark.png",
    "q17plan_spark"
  );

  loadAndDrawRuntimePlan(
    "assets/queryinfo/q17/runtimePlan.png",
    "sparkRuntimePlan"
  );
  loadAndDrawRuntimePlan(
    "assets/queryinfo/q17/runtimePlan.png",
    "inqpRuntimePlan"
  );

  drawResult("inqpresult", 0, 0, "");
  drawResult("sparkresult", 0, 0, "");

  var interval = setInterval(function() {
    if (curUpdateIdx >= numUpdates) {
      clearInterval(interval);
      console.log("End");
    } else {
      var canvas = document.getElementById("inqpRuntimePlan");
      var ctx = canvas.getContext("2d");
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      canvas = document.getElementById("sparkRuntimePlan");
      ctx = canvas.getContext("2d");
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      loadAndDrawRuntimePlan(
        "assets/queryinfo/q17/runtimePlan.png",
        "sparkRuntimePlan"
      );
      loadAndDrawRuntimePlan(
        "assets/queryinfo/q17/runtimePlan.png",
        "inqpRuntimePlan"
      );
      writeInQPStatistics(curUpdateIdx);
      writeSparkStatistics(curUpdateIdx);
      curUpdateIdx += 1;

      if (curUpdateIdx === numUpdates) {
        drawResult("inqpresult", inqpLatency, inqpTotalTime, inqpResult);
        drawResult("sparkresult", sparkLatency, sparkTotalTime, sparkResult);
      }
    }
  }, 600);
}

function loadAndDrawPlanWithPace(url, id) {
  // Create an image object. This is not attached to the DOM and is not part of the page.
  var image = new Image();

  // When the image has loaded, draw it to the canvas
  image.onload = function() {
    var canvas = document.getElementById(id);
    canvas.style.marginTop = "0px";

    var width = 530;
    var height = 151;

    var startX = 5;
    var startY = 10;

    var context = canvas.getContext("2d");

    context.drawImage(image, startX, startY, width, height);
  };

  // Now set the source of the image that we want to load
  image.src = url;
}

function loadAndDrawRuntimePlan(url, id) {
  // Create an image object. This is not attached to the DOM and is not part of the page.
  var image = new Image();

  // When the image has loaded, draw it to the canvas
  image.onload = function() {
    var canvas = document.getElementById(id);

    var width = 258;
    var height = 424;

    var startX = 130;
    var startY = 65;

    var context = canvas.getContext("2d");

    context.drawImage(image, startX, startY, width, height);
  };

  // Now set the source of the image that we want to load
  image.src = url;
}

function writeInQPStatistics(curStep) {
  var canvas = document.getElementById("inqpRuntimePlan");
  var ctx = canvas.getContext("2d");
  ctx.font = "20px Consolas";

  drawStats(
    ctx,
    getRows(inqpInsertLineitem1, curStep),
    getRows(inqpDeleteLineitem1, curStep),
    340,
    420,
    isChange(inqpInsertLineitem1, inqpDeleteLineitem1, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertLineitem2, curStep),
    getRows(inqpDeleteLineitem2, curStep),
    90,
    345,
    isChange(inqpInsertLineitem2, inqpDeleteLineitem2, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertPart, curStep),
    getRows(inqpDeletePart, curStep),
    70,
    265,
    isChange(inqpInsertPart, inqpDeletePart, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertAgg1, curStep),
    getRows(inqpDeleteAgg1, curStep),
    340,
    345,
    isChange(inqpInsertAgg1, inqpDeleteAgg1, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertJoin1, curStep),
    getRows(inqpDeleteJoin1, curStep),
    290,
    265,
    isChange(inqpInsertJoin1, inqpDeleteJoin1, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertJoin2, curStep),
    getRows(inqpDeleteJoin2, curStep),
    250,
    200,
    isChange(inqpInsertJoin2, inqpDeleteJoin2, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertAgg2, curStep),
    getRows(inqpDeleteAgg2, curStep),
    240,
    120,
    isChange(inqpInsertAgg2, inqpDeleteAgg2, curStep)
  );

  drawStats(
    ctx,
    getRows(inqpInsertProj, curStep),
    getRows(inqpDeleteProj, curStep),
    240,
    55,
    isChange(inqpInsertProj, inqpDeleteProj, curStep)
  );
}

function writeSparkStatistics(curStep) {
  var canvas = document.getElementById("sparkRuntimePlan");
  var ctx = canvas.getContext("2d");
  ctx.font = "20px Consolas";

  drawStats(
    ctx,
    getRows(sparkInsertLineitem1, curStep),
    getRows(sparkDeleteLineitem1, curStep),
    340,
    420,
    isChange(sparkInsertLineitem1, sparkDeleteLineitem1, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertLineitem2, curStep),
    getRows(sparkDeleteLineitem2, curStep),
    90,
    345,
    isChange(sparkInsertLineitem2, sparkDeleteLineitem2, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertPart, curStep),
    getRows(sparkDeletePart, curStep),
    70,
    265,
    isChange(sparkInsertPart, sparkDeletePart, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertAgg1, curStep),
    getRows(sparkDeleteAgg1, curStep),
    340,
    345,
    isChange(sparkInsertAgg1, sparkDeleteAgg1, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertJoin1, curStep),
    getRows(sparkDeleteJoin1, curStep),
    290,
    265,
    isChange(sparkInsertJoin1, sparkDeleteJoin1, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertJoin2, curStep),
    getRows(sparkDeleteJoin2, curStep),
    250,
    200,
    isChange(sparkInsertJoin2, sparkDeleteJoin2, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertAgg2, curStep),
    getRows(sparkDeleteAgg2, curStep),
    240,
    120,
    isChange(sparkInsertAgg2, sparkDeleteAgg2, curStep)
  );

  drawStats(
    ctx,
    getRows(sparkInsertProj, curStep),
    getRows(sparkDeleteProj, curStep),
    240,
    55,
    isChange(sparkInsertProj, sparkDeleteProj, curStep)
  );
}

function getRows(rowArray, curStep) {
  if (curStep <= 0) return 0;
  var arrayLen = rowArray.length;
  var progress = (curStep + 1) / numUpdates;
  var index = Math.floor(progress * arrayLen) - 1;
  if (index < 0) return 0;
  else return rowArray[index];
}

function numberWithCommas(x) {
  return x.toString().replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ",");
}

function drawStats(ctx, insertRow, deleteRow, x, y, dataChange) {
  if (dataChange) {
    ctx.fillStyle = "red";
  } else {
    ctx.fillStyle = "black";
  }
  const linewidth = 20;
  ctx.fillText("[insert: " + numberWithCommas(insertRow) + "]", x, y);
  ctx.fillText(
    "[delete: " + numberWithCommas(deleteRow) + "]",
    x,
    y + linewidth
  );
}

function isChange(arrayA, arrayB, curStep) {
  if (curStep <= 0) {
    return false;
  } else {
    var arrayLen = arrayA.length;
    var oldProgress = curStep / numUpdates;
    var oldIndex = Math.floor(oldProgress * arrayLen) - 1;
    var progress = (curStep + 1) / numUpdates;
    var index = Math.floor(progress * arrayLen) - 1;

    if (oldIndex < 0) return false;

    if (arrayA[index] !== arrayA[oldIndex]) return true;
    if (arrayB[index] !== arrayB[oldIndex]) return true;
    return false;
  }
}

var orgCanvasWidth = 0;
var orgCanvasHeight = 0;

function loadAndDrawImage(url, id, scale) {
  // Create an image object. This is not attached to the DOM and is not part of the page.
  var image = new Image();

  // When the image has loaded, draw it to the canvas
  image.onload = function() {
    var canvas = document.getElementById(id);

    if (orgCanvasWidth === 0) {
      orgCanvasHeight = canvas.height;
      orgCanvasWidth = canvas.width;
    }

    var width = orgCanvasWidth - 50;
    var height = orgCanvasHeight - 30;

    canvas.height = orgCanvasHeight * scale;

    var startX = 25;
    var startY = (canvas.height - height) / 2;

    var context = canvas.getContext("2d");

    context.drawImage(image, startX, startY, width, height);
  };

  // Now set the source of the image that we want to load
  image.src = url;
}

const q17_inqp_tradeoff =
  "1.0 0.0 [1, 1, 1, 1, 1]\n0.5 0.2 [2, 1, 4, 3, 4]\n0.2 0.4 [1, 3, 4, 3, 10]\n0.1 1.0 [74, 100, 2, 90, 1]\n0.05 1.0 [100, 74, 2, 90, 1]";
const q17_spark_tradeoff =
  "1.0 0.0 [1]\n0.5 0.2 [2]\n0.2 0.4 [4]\n0.1 1.0 [22]\n0.05 1.0 [44]";
const qhigh_inqp_tradeoff =
  "1.0 0.0 [1, 1, 1]\n0.5 0.2 [2, 1, 4]\n0.2 0.4 [1, 3, 4]\n0.1 1.0 [1, 4, 2]\n0.05 1.0 [1, 4, 2]";
const qhigh_spark_tradeoff =
  "1.0 0.0 [1]\n0.5 0.2 [2]\n0.2 0.4 [4]\n0.1 1.0 [10]\n0.05 1.0 [1, 4, 2]";

var oldPathNum = 3;

function setPathInfo() {
  var queryName = document.getElementById("query").value;
  var constraint = document.getElementById("goal").value;
  var inqpPace;
  var sparkPace;
  if (queryName.localeCompare("Q-HighCustBal") === 0) {
    inqpPace = parsePaceInfo(qhigh_inqp_tradeoff, constraint);
    sparkPace = parsePaceInfo(qhigh_spark_tradeoff, constraint);
  } else if (queryName.localeCompare("Q-17") === 0) {
    inqpPace = parsePaceInfo(q17_inqp_tradeoff, constraint);
    sparkPace = parsePaceInfo(q17_spark_tradeoff, constraint);
  }

  var formPath = document.getElementById("formPath");
  const newPathNum = inqpPace.length;
  var pathIdx = 0;
  if (newPathNum > oldPathNum) {
    for (pathIdx = oldPathNum; pathIdx < newPathNum; pathIdx++) {
      var temp;
      if (pathIdx === 3) {
        temp = document.getElementById("p4Template");
      } else if (pathIdx === 4) {
        temp = document.getElementById("p5Template");
      }
      var clon = temp.content.cloneNode(true);
      formPath.appendChild(clon);
    }
  } else if (newPathNum < oldPathNum) {
    for (pathIdx = oldPathNum; pathIdx > newPathNum; pathIdx--) {
      formPath.removeChild(document.getElementById("path" + pathIdx));
    }
  }

  for (pathIdx = 0; pathIdx < newPathNum; pathIdx++) {
    document.getElementById("qp" + (pathIdx + 1) + "_inqp").value =
      inqpPace[pathIdx];
    document.getElementById("qp" + (pathIdx + 1) + "_spark").value =
      sparkPace[0];
  }

  oldPathNum = newPathNum;
}

function parsePaceInfo(text, constraint) {
  const textByLine = text.split("\n");
  var paceArray = new Array();
  var i;
  for (i = 0; i < textByLine.length; i++) {
    var line = textByLine[i];
    if (line.startsWith(constraint)) {
      const start = line.indexOf("[");
      const end = line.indexOf("]");
      const paceStr = line.substring(start + 1, end);
      const paceSplitStr = paceStr.split(",");
      var j;
      for (j = 0; j < paceSplitStr.length; j++) {
        console.log(paceSplitStr[j].trim());
        paceArray.push(paceSplitStr[j].trim());
      }
    }
  }

  return paceArray;
}

let curUpdateIdx = 0;
let numUpdates = 100;

var inqpInsertLineitem1 = [
  599880,
  1199760,
  1799640,
  2399520,
  2999400,
  3599280,
  4199160,
  4799040,
  5398920,
  5998800,
  6598680,
  7198560,
  7798440,
  8398320,
  8998200,
  9598080,
  10197960,
  10797840,
  11397720,
  11997600,
  12597480,
  13197360,
  13797240,
  14397120,
  14997000,
  15596880,
  16196760,
  16796640,
  17396520,
  17996400,
  18596280,
  19196160,
  19796040,
  20395920,
  20995800,
  21595680,
  22195560,
  22795440,
  23395320,
  23995200,
  24595080,
  25194960,
  25794840,
  26394720,
  26994600,
  27594480,
  28194360,
  28794240,
  29394120,
  29994000,
  30593880,
  31193760,
  31793640,
  32393520,
  32993400,
  33593280,
  34193160,
  34793040,
  35392920,
  35992800,
  36592680,
  37192560,
  37792440,
  38392320,
  38992200,
  39592080,
  40191960,
  40791840,
  41391720,
  41991600,
  42591480,
  43191360,
  43791240,
  44391120,
  44991000,
  45590880,
  46190760,
  46790640,
  47390520,
  47990400,
  48590280,
  49190160,
  49790040,
  50389920,
  50989800,
  51589680,
  52189560,
  52789440,
  53389320,
  53989200,
  54589080,
  55188960,
  55788840,
  56388720,
  56988600,
  57588480,
  58188360,
  58788240,
  59388120,
  59986052
];
var inqpInsertLineitem2 = [
  0,
  810640,
  1621280,
  2431920,
  3242560,
  4053200,
  4863840,
  5674480,
  6485120,
  7295760,
  8106400,
  8917040,
  9727680,
  10538320,
  11348960,
  12159600,
  12970240,
  13780880,
  14591520,
  15402160,
  16212800,
  17023440,
  17834080,
  18644720,
  19455360,
  20266000,
  21076640,
  21887280,
  22697920,
  23508560,
  24319200,
  25129840,
  25940480,
  26751120,
  27561760,
  28372400,
  29183040,
  29993680,
  30804320,
  31614960,
  32425600,
  33236240,
  34046880,
  34857520,
  35668160,
  36478800,
  37289440,
  38100080,
  38910720,
  39721360,
  40532000,
  41342640,
  42153280,
  42963920,
  43774560,
  44585200,
  45395840,
  46206480,
  47017120,
  47827760,
  48638400,
  49449040,
  50259680,
  51070320,
  51880960,
  52691600,
  53502240,
  54312880,
  55123520,
  55934160,
  56744800,
  57555440,
  58366080,
  59176720,
  59986052
];
var inqpInsertPart = [
  0,
  22240,
  44480,
  66720,
  88960,
  111200,
  133440,
  155680,
  177920,
  200160,
  222400,
  244640,
  266880,
  289120,
  311360,
  333600,
  355840,
  378080,
  400320,
  422560,
  444800,
  467040,
  489280,
  511520,
  533760,
  556000,
  578240,
  600480,
  622720,
  644960,
  667200,
  689440,
  711680,
  733920,
  756160,
  778400,
  800640,
  822880,
  845120,
  867360,
  889600,
  911840,
  934080,
  956320,
  978560,
  1000800,
  1023040,
  1045280,
  1067520,
  1089760,
  1112000,
  1134240,
  1156480,
  1178720,
  1200960,
  1223200,
  1245440,
  1267680,
  1289920,
  1312160,
  1334400,
  1356640,
  1378880,
  1401120,
  1423360,
  1445600,
  1467840,
  1490080,
  1512320,
  1534560,
  1556800,
  1579040,
  1601280,
  1623520,
  1645760,
  1668000,
  1690240,
  1712480,
  1734720,
  1756960,
  1779200,
  1801440,
  1823680,
  1845920,
  1868160,
  1890400,
  1912640,
  1934880,
  1957120,
  1979360,
  2000000
];
var inqpInsertAgg1 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  1999999,
  5999996
];
var inqpInsertJoin1 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  2590138,
  2590138,
  2664369,
  2738901,
  2738901,
  2813365,
  2887640,
  2962069,
  2962069,
  3036828,
  3111136,
  3185477,
  3185477,
  3260046,
  3334730,
  3409162,
  3409162,
  3484323,
  3558866,
  3633720,
  3633720,
  3707855,
  3782405,
  3856723,
  3856723,
  3931515,
  4006386,
  4006386,
  4080881,
  4155434,
  4230048,
  4230048,
  4304733,
  4379773,
  4454595,
  4454595,
  4529400,
  4604198,
  4678502,
  4678502,
  4752887,
  4827804,
  4902705,
  4902705,
  4977175,
  5051920,
  5126507,
  5126507,
  5201187,
  5275568,
  15795108
];
var inqpInsertJoin2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1345,
  1345,
  1411,
  1483,
  1529,
  1595,
  1663,
  1738,
  1769,
  1837,
  1894,
  1937,
  1974,
  2055,
  2145,
  2222,
  2265,
  2352,
  2443,
  2563,
  2609,
  2653,
  2736,
  2838,
  2879,
  2990,
  3068,
  3134,
  3239,
  3350,
  3467,
  3467,
  3574,
  3716,
  3843,
  3896,
  4013,
  4142,
  4254,
  4297,
  4405,
  4477,
  4602,
  4638,
  4769,
  4898,
  5030,
  5081,
  5236,
  5411,
  16212
];
var inqpInsertAgg2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1
];
var inqpInsertProj = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1
];

var inqpDeleteLineitem1 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var inqpDeleteLineitem2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var inqpDeletePart = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var inqpDeleteAgg1 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1999998
];
var inqpDeleteJoin1 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  5350075
];
var inqpDeleteJoin2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  5480
];
var inqpDeleteAgg2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var inqpDeleteProj = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];

var sparkInsertLineitem1 = [
  1363320,
  2726640,
  4089960,
  5453280,
  6816600,
  8179920,
  9543240,
  10906560,
  12269880,
  13633200,
  14996520,
  16359840,
  17723160,
  19086480,
  20449800,
  21813120,
  23176440,
  24539760,
  25903080,
  27266400,
  28629720,
  29993040,
  31356360,
  32719680,
  34083000,
  35446320,
  36809640,
  38172960,
  39536280,
  40899600,
  42262920,
  43626240,
  44989560,
  46352880,
  47716200,
  49079520,
  50442840,
  51806160,
  53169480,
  54532800,
  55896120,
  57259440,
  58622760,
  59986052
];
var sparkInsertLineitem2 = [
  1363320,
  2726640,
  4089960,
  5453280,
  6816600,
  8179920,
  9543240,
  10906560,
  12269880,
  13633200,
  14996520,
  16359840,
  17723160,
  19086480,
  20449800,
  21813120,
  23176440,
  24539760,
  25903080,
  27266400,
  28629720,
  29993040,
  31356360,
  32719680,
  34083000,
  35446320,
  36809640,
  38172960,
  39536280,
  40899600,
  42262920,
  43626240,
  44989560,
  46352880,
  47716200,
  49079520,
  50442840,
  51806160,
  53169480,
  54532800,
  55896120,
  57259440,
  58622760,
  59986052
];
var sparkInsertPart = [
  45460,
  90920,
  136380,
  181840,
  227300,
  272760,
  318220,
  363680,
  409140,
  454600,
  500060,
  545520,
  590980,
  636440,
  681900,
  727360,
  772820,
  818280,
  863740,
  909200,
  954660,
  1000120,
  1045580,
  1091040,
  1136500,
  1181960,
  1227420,
  1272880,
  1318340,
  1363800,
  1409260,
  1454720,
  1500180,
  1545640,
  1591100,
  1636560,
  1682020,
  1727480,
  1772940,
  1818400,
  1863860,
  1909320,
  1954780,
  2000000
];
var sparkInsertAgg1 = [
  988908,
  2466355,
  4190315,
  6040176,
  7953870,
  9898193,
  11859459,
  13829068,
  15801179,
  17776686,
  19752388,
  21729026,
  23705894,
  25682723,
  27659161,
  29636298,
  31613530,
  33591956,
  35568711,
  37546070,
  39524281,
  41502081,
  43479400,
  45457370,
  47436480,
  49414082,
  51392474,
  53369520,
  55346398,
  57324414,
  59301122,
  61278560,
  63256542,
  65234056,
  67211200,
  69189310,
  71166468,
  73144002,
  75121130,
  77099870,
  79077082,
  81053734,
  83030780,
  85007136
];
var sparkInsertJoin1 = [
  34490,
  246448,
  612896,
  1122242,
  1767994,
  2544790,
  3449235,
  4483085,
  5642567,
  6932342,
  8343424,
  9880727,
  11542816,
  13331059,
  15242761,
  17278542,
  19439157,
  21721607,
  24129707,
  26660493,
  29313860,
  32092265,
  34993608,
  38026110,
  41183357,
  44459503,
  47861450,
  51387235,
  55037240,
  58816011,
  62714195,
  66736851,
  70883789,
  75156368,
  79549192,
  84072980,
  88717089,
  93486152,
  98378254,
  103396687,
  108535497,
  113802061,
  119191392,
  124704592
];
var sparkInsertJoin2 = [
  3,
  15,
  35,
  76,
  148,
  260,
  411,
  596,
  850,
  1160,
  1517,
  2006,
  2529,
  3079,
  3715,
  4510,
  5419,
  6476,
  7499,
  8721,
  9977,
  11471,
  13014,
  14768,
  16527,
  18532,
  20690,
  22884,
  25240,
  27998,
  30750,
  33799,
  36834,
  40149,
  43741,
  47511,
  51497,
  55913,
  60374,
  65148,
  70141,
  75381,
  81006,
  86878
];
var sparkInsertAgg2 = [
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44
];
var sparkInsertProj = [
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  34,
  35,
  36,
  37,
  38,
  39,
  40,
  41,
  42,
  43,
  44
];

var sparkDeleteLineitem1 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var sparkDeleteLineitem2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var sparkDeletePart = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var sparkDeleteAgg1 = [
  0,
  488939,
  1224178,
  2085457,
  3009985,
  3965774,
  4938210,
  5918871,
  6902755,
  7889440,
  8876745,
  9864786,
  10853072,
  11841424,
  12829615,
  13818170,
  14806777,
  15795984,
  16784358,
  17773037,
  18762142,
  19751041,
  20739700,
  21728685,
  22718240,
  23707041,
  24696237,
  25684760,
  26673199,
  27662207,
  28650561,
  29639280,
  30628271,
  31617028,
  32605600,
  33594655,
  34583234,
  35572001,
  36560565,
  37549935,
  38538541,
  39526867,
  40515390,
  41503568
];
var sparkDeleteJoin1 = [
  0,
  77911,
  226383,
  442272,
  723597,
  1068693,
  1476627,
  1948203,
  2482402,
  3081054,
  3740306,
  4462138,
  5246583,
  6093771,
  7003097,
  7973592,
  9006876,
  10101231,
  11258095,
  12476022,
  13755152,
  15097082,
  16499789,
  17968278,
  19499211,
  21089829,
  22743433,
  24458477,
  26235203,
  28076446,
  29978027,
  31941451,
  33966730,
  36055042,
  38203331,
  40417116,
  42690564,
  45026974,
  47424963,
  49885826,
  52407395,
  54992427,
  57638494,
  60346931
];
var sparkDeleteJoin2 = [
  0,
  3,
  10,
  25,
  49,
  92,
  155,
  234,
  335,
  472,
  624,
  841,
  1067,
  1309,
  1590,
  1955,
  2356,
  2830,
  3303,
  3874,
  4460,
  5153,
  5869,
  6679,
  7497,
  8441,
  9455,
  10491,
  11603,
  12892,
  14185,
  15636,
  17070,
  18644,
  20348,
  22133,
  24014,
  26127,
  28272,
  30577,
  32974,
  35478,
  38180,
  41008
];
var sparkDeleteAgg2 = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
var sparkDeleteProj = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0
];
